export var Toolbelt;(function(n){var t;(function(n){var t;(function(n){function e(n,i,e,o,s){const h=u++,c=new r(n,i,e,f[o]||o,s);return t[h]=c,h}function o(n){delete t[n]}function s(n){let i=!1;for(const r in t)if(t.hasOwnProperty(r)){const u=t[r],f=u.mode===0,o=f?n.keyName:n.nativeKey;if(u.keyName.localeCompare(o,"en",{sensitivity:"base"})===0){const s=f?n.modKeys:n.modKeys&65534;let e=f?u.modKeys:u.modKeys&65534;(u.keyName==="Shift"&&f&&(e|=1),u.keyName==="Ctrl"&&(e|=2),u.keyName==="Alt"&&(e|=4),s===e)&&h(u,n)&&(i=!0,u.action())}}return i}function h(n,t){return(n.exclude&1)!=0&&t.tagName==="INPUT"&&i.indexOf(t.type||"")===-1?!1:(n.exclude&2)!=0&&t.tagName==="INPUT"&&i.indexOf(t.type||"")!==-1?!1:(n.exclude&4)!=0&&t.tagName==="TEXTAREA"?!1:(n.exclude&8)!=0&&t.srcElement.contentEditable==="true"?!1:!0}function c(n,t){document.addEventListener("keydown",i=>{if(typeof i.altKey!="undefined"){const r=(i.shiftKey?1:0)+(i.ctrlKey?2:0)+(i.altKey?4:0)+(i.metaKey?8:0),u=i.key,c=i.code,f=a(i),e=i.srcElement,o=e.tagName,h=e.getAttribute("type"),l=s({modKeys:r,keyName:f,nativeKey:u,srcElement:e,tagName:o,type:h}),v=t===!0?n.invokeMethod("OnKeyDown",r,f,o,h,u,c):!1;(l||v)&&i.preventDefault();t===!1&&n.invokeMethodAsync("OnKeyDown",r,f,o,h,u,c)}})}function a(n){const t=v(n.code||n.key);return l[t]||t}function v(n){const t=t=>{var i;if((i=n.match(t))!==null&&i!==void 0)return i.input};switch(n){case t(/^Key[A-Z]/):return n.charAt(3);case t(/^Digit\d$/):return"Num"+n.charAt(5);case t(/^Numpad\d$/):return"Num"+n.charAt(6);case t(/^Volume.+$/):return"Audio"+n;case t(/^Arrow.+$/):return n.substr(5);case t(/^[SACOM].+(Left|Right)$/):return n.replace(/(Left|Right)$/,"");default:return n.replace(/^Bracket/,"Blace").replace(/^Page/,"Pg").replace(/^Numpad/,"")}}class r{constructor(n,t,i,r,u){this.hotKeyEntryWrpper=n;this.mode=t;this.modKeys=i;this.keyName=r;this.exclude=u;const f=[];(u&1)!=0&&f.push("input[type=text]");(u&2)!=0&&f.push("input:not([type=text])");(u&4)!=0&&f.push("textarea");this.selector="*:not("+f.join(",")+")"}action(){this.hotKeyEntryWrpper.invokeMethodAsync("InvokeAction")}}const i=["button","checkbox","color","file","image","radio","range","reset","submit",];let u=0;const t={},f={BackQuart:"BackQuote",SingleQuart:"SingleQuote"};n.register=e;n.unregister=o;n.attach=c;const l={Escape:"ESC",Control:"Ctrl",OS:"Meta",Minus:"Hyphen",Quote:"SingleQuote",Decimal:"Period"}})(t=n.HotKeys||(n.HotKeys={}))})(t=n.Blazor||(n.Blazor={}))})(Toolbelt||(Toolbelt={}));